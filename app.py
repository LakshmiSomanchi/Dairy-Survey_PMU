import streamlit as st
BASELINE_QUESTIONS = [
    # Farmer Profile Section
    {"label": {"English": "Types", "Hindi": "‡§™‡•ç‡§∞‡§ï‡§æ‡§∞", "Marathi": "‡§™‡•ç‡§∞‡§ï‡§æ‡§∞"}, "type": "text"},
    {"label": {"English": "BMC/MCC Name", "Hindi": "‡§¨‡•Ä‡§è‡§Æ‡§∏‡•Ä/‡§è‡§Æ‡§∏‡•Ä‡§∏‡•Ä ‡§®‡§æ‡§Æ", "Marathi": "‡§¨‡•Ä‡§è‡§Æ‡§∏‡•Ä/‡§è‡§Æ‡§∏‡•Ä‡§∏‡•Ä ‡§®‡§æ‡§µ"}, "type": "text"},
    {"label": {"English": "BMC/MCC Code", "Hindi": "‡§¨‡•Ä‡§è‡§Æ‡§∏‡•Ä/‡§è‡§Æ‡§∏‡•Ä‡§∏‡•Ä ‡§ï‡•ã‡§°", "Marathi": "‡§¨‡•Ä‡§è‡§Æ‡§∏‡•Ä/‡§è‡§Æ‡§∏‡•Ä‡§∏‡•Ä ‡§ï‡•ã‡§°"}, "type": "text"},
    {"label": {"English": "District", "Hindi": "‡§ú‡§ø‡§≤‡§æ", "Marathi": "‡§ú‡§ø‡§≤‡•ç‡§π‡§æ"}, "type": "text"},
    {"label": {"English": "Taluka", "Hindi": "‡§§‡§æ‡§≤‡•Å‡§ï‡§æ", "Marathi": "‡§§‡§æ‡§≤‡•Å‡§ï‡§æ"}, "type": "text"},
    {"label": {"English": "Village", "Hindi": "‡§ó‡§æ‡§Ç‡§µ", "Marathi": "‡§ó‡§æ‡§µ"}, "type": "text"},
    {"label": {"English": "BCF Name", "Hindi": "‡§¨‡•Ä‡§∏‡•Ä‡§è‡§´ ‡§ï‡§æ ‡§®‡§æ‡§Æ", "Marathi": "‡§¨‡•Ä‡§∏‡•Ä‡§è‡§´‡§ö‡•á ‡§®‡§æ‡§µ"}, "type": "text"},
    {"label": {"English": "Energy sources", "Hindi": "‡§ä‡§∞‡•ç‡§ú‡§æ ‡§∏‡•ç‡§∞‡•ã‡§§", "Marathi": "‡§ä‡§∞‡•ç‡§ú‡•á‡§ö‡•á ‡§∏‡•ç‡§∞‡•ã‡§§"}, "type": "multiselect", "options": ["Solar", "Main electricity", "Both", "Generator"]},
    {"label": {"English": "Number of villages covered by the BMC", "Hindi": "‡§¨‡•Ä‡§è‡§Æ‡§∏‡•Ä ‡§¶‡•ç‡§µ‡§æ‡§∞‡§æ ‡§ï‡§µ‡§∞ ‡§ï‡§ø‡§è ‡§ó‡§è ‡§ó‡§æ‡§Ç‡§µ‡•ã‡§Ç ‡§ï‡•Ä ‡§∏‡§Ç‡§ñ‡•ç‡§Ø‡§æ", "Marathi": "‡§¨‡•Ä‡§è‡§Æ‡§∏‡•Ä‡§®‡•á ‡§µ‡•ç‡§Ø‡§æ‡§™‡§≤‡•á‡§≤‡•Ä ‡§ó‡§æ‡§µ‡§æ‡§Ç‡§ö‡•Ä ‡§∏‡§Ç‡§ñ‡•ç‡§Ø‡§æ"}, "type": "number"},
    {"label": {"English": "Name of village", "Hindi": "‡§ó‡§æ‡§Ç‡§µ ‡§ï‡§æ ‡§®‡§æ‡§Æ", "Marathi": "‡§ó‡§æ‡§µ‡§æ‡§ö‡•á ‡§®‡§æ‡§µ"}, "type": "text"},
    {"label": {"English": "No. of direct pouring farmers", "Hindi": "‡§™‡•ç‡§∞‡§§‡•ç‡§Ø‡§ï‡•ç‡§∑ ‡§¶‡•Ç‡§ß ‡§¶‡•á‡§®‡•á ‡§µ‡§æ‡§≤‡•á ‡§ï‡§ø‡§∏‡§æ‡§®‡•ã‡§Ç ‡§ï‡•Ä ‡§∏‡§Ç‡§ñ‡•ç‡§Ø‡§æ", "Marathi": "‡§•‡•á‡§ü ‡§¶‡•Ç‡§ß ‡§¶‡•á‡§£‡§æ‡§±‡•ç‡§Ø‡§æ ‡§∂‡•á‡§§‡§ï‡§±‡•ç‡§Ø‡§æ‡§Ç‡§ö‡•Ä ‡§∏‡§Ç‡§ñ‡•ç‡§Ø‡§æ"}, "type": "number"},
    {"label": {"English": "No. of Route vehicles pouring milk at BMC", "Hindi": "‡§¨‡•Ä‡§è‡§Æ‡§∏‡•Ä ‡§Æ‡•á‡§Ç ‡§¶‡•Ç‡§ß ‡§°‡§æ‡§≤‡§®‡•á ‡§µ‡§æ‡§≤‡•á ‡§∞‡•Ç‡§ü ‡§µ‡§æ‡§π‡§®", "Marathi": "‡§¨‡•Ä‡§è‡§Æ‡§∏‡•Ä‡§Æ‡§ß‡•ç‡§Ø‡•á ‡§¶‡•Ç‡§ß ‡§Ü‡§£‡§£‡§æ‡§±‡•ç‡§Ø‡§æ ‡§Æ‡§æ‡§∞‡•ç‡§ó ‡§µ‡§æ‡§π‡§®‡§æ‡§Ç‡§ö‡•Ä ‡§∏‡§Ç‡§ñ‡•ç‡§Ø‡§æ"}, "type": "number"},
    {"label": {"English": "No. of farmers under each Route vehicle", "Hindi": "‡§™‡•ç‡§∞‡§§‡•ç‡§Ø‡•á‡§ï ‡§∞‡•Ç‡§ü ‡§µ‡§æ‡§π‡§® ‡§ï‡•á ‡§§‡§π‡§§ ‡§ï‡§ø‡§∏‡§æ‡§®‡•ã‡§Ç ‡§ï‡•Ä ‡§∏‡§Ç‡§ñ‡•ç‡§Ø‡§æ", "Marathi": "‡§™‡•ç‡§∞‡§§‡•ç‡§Ø‡•á‡§ï ‡§Æ‡§æ‡§∞‡•ç‡§ó ‡§µ‡§æ‡§π‡§®‡§æ‡§ñ‡§æ‡§≤‡•Ä‡§≤ ‡§∂‡•á‡§§‡§ï‡§±‡•ç‡§Ø‡§æ‡§Ç‡§ö‡•Ä ‡§∏‡§Ç‡§ñ‡•ç‡§Ø‡§æ"}, "type": "number"},
    {"label": {"English": "Farmer Name", "Hindi": "‡§ï‡§ø‡§∏‡§æ‡§® ‡§ï‡§æ ‡§®‡§æ‡§Æ", "Marathi": "‡§∂‡•á‡§§‡§ï‡§±‡•ç‡§Ø‡§æ‡§ö‡•á ‡§®‡§æ‡§µ"}, "type": "text"},
    {"label": {"English": "Farmer Code / Pourer Id", "Hindi": "‡§ï‡§ø‡§∏‡§æ‡§® ‡§ï‡•ã‡§° / ‡§¶‡•Ç‡§ß ‡§¶‡•á‡§®‡•á ‡§µ‡§æ‡§≤‡§æ ‡§Ü‡§à‡§°‡•Ä", "Marathi": "‡§∂‡•á‡§§‡§ï‡§∞‡•Ä ‡§ï‡•ã‡§° / ‡§¶‡•Ç‡§ß ‡§¶‡•á‡§£‡§æ‡§∞‡§æ ‡§Ü‡§Ø‡§°‡•Ä"}, "type": "text"},
    {"label": {"English": "Gender", "Hindi": "‡§≤‡§ø‡§Ç‡§ó", "Marathi": "‡§≤‡§ø‡§Ç‡§ó"}, "type": "select", "options": ["Male", "Female"]},
    {"label": {"English": "Services provided by BMC to farmer", "Hindi": "‡§ï‡§ø‡§∏‡§æ‡§® ‡§ï‡•ã ‡§¨‡•Ä‡§è‡§Æ‡§∏‡•Ä ‡§¶‡•ç‡§µ‡§æ‡§∞‡§æ ‡§¶‡•Ä ‡§ú‡§æ‡§®‡•á ‡§µ‡§æ‡§≤‡•Ä ‡§∏‡•á‡§µ‡§æ‡§è‡§Ç", "Marathi": "‡§∂‡•á‡§§‡§ï‡§±‡•ç‡§Ø‡§æ‡§≤‡§æ ‡§¨‡•Ä‡§è‡§Æ‡§∏‡•Ä‡§®‡•á ‡§¶‡§ø‡§≤‡•á‡§≤‡•ç‡§Ø‡§æ ‡§∏‡•á‡§µ‡§æ"}, "type": "text"},

    # Farm Details Section
    {"label": {"English": "Number of Cows", "Hindi": "‡§ó‡§æ‡§Ø‡•ã‡§Ç ‡§ï‡•Ä ‡§∏‡§Ç‡§ñ‡•ç‡§Ø‡§æ", "Marathi": "‡§ó‡§æ‡§Ø‡§æ‡§Ç‡§ö‡•Ä ‡§∏‡§Ç‡§ñ‡•ç‡§Ø‡§æ"}, "type": "number"},
    {"label": {"English": "No. of Cattle in Milk", "Hindi": "‡§¶‡•Ç‡§ß ‡§¶‡•á‡§£‡§æ‡§∞‡•á ‡§ú‡§®‡§æ‡§µ‡§∞‡•á", "Marathi": "‡§¶‡•Ç‡§ß ‡§¶‡•á‡§£‡§æ‡§±‡•ç‡§Ø‡§æ ‡§ú‡§®‡§æ‡§µ‡§∞‡§æ‡§Ç‡§ö‡•Ä ‡§∏‡§Ç‡§ñ‡•ç‡§Ø‡§æ"}, "type": "number"},
    {"label": {"English": "No. of Calves/Heifers", "Hindi": "‡§¨‡§õ‡§°‡§º‡•á/‡§¨‡§õ‡§°‡§º‡§ø‡§Ø‡§æ‡§Ç", "Marathi": "‡§ï‡§æ‡§≤‡§µ‡§°‡•á/‡§ï‡§æ‡§≤‡§µ‡§°‡•Ä"}, "type": "number"},
    {"label": {"English": "No. of Desi cows", "Hindi": "‡§¶‡•á‡§∏‡•Ä ‡§ó‡§æ‡§Ø‡•ã‡§Ç ‡§ï‡•Ä ‡§∏‡§Ç‡§ñ‡•ç‡§Ø‡§æ", "Marathi": "‡§¶‡•á‡§∂‡•Ä ‡§ó‡§æ‡§Ø‡§æ‡§Ç‡§ö‡•Ä ‡§∏‡§Ç‡§ñ‡•ç‡§Ø‡§æ"}, "type": "number"},
    {"label": {"English": "Milk Production in litres per day-Desi cows", "Hindi": "‡§¶‡•á‡§∏‡•Ä ‡§ó‡§æ‡§Ø‡•ã‡§Ç ‡§¶‡•ç‡§µ‡§æ‡§∞‡§æ ‡§™‡•ç‡§∞‡§§‡§ø‡§¶‡§ø‡§® ‡§¶‡•Ç‡§ß ‡§â‡§§‡•ç‡§™‡§æ‡§¶‡§® (‡§≤‡•Ä‡§ü‡§∞ ‡§Æ‡•á‡§Ç)", "Marathi": "‡§¶‡•á‡§∂‡•Ä ‡§ó‡§æ‡§Ø‡•Ä‡§Ç‡§ï‡§°‡•Ç‡§® ‡§¶‡§∞‡§∞‡•ã‡§ú ‡§¶‡•Ç‡§ß ‡§â‡§§‡•ç‡§™‡§æ‡§¶‡§® (‡§≤‡§ø‡§ü‡§∞ ‡§Æ‡§ß‡•ç‡§Ø‡•á)"}, "type": "number"},
    {"label": {"English": "No. of Cross breed cows", "Hindi": "‡§ï‡•ç‡§∞‡•â‡§∏‡§¨‡•ç‡§∞‡•Ä‡§° ‡§ó‡§æ‡§Ø‡•ã‡§Ç ‡§ï‡•Ä ‡§∏‡§Ç‡§ñ‡•ç‡§Ø‡§æ", "Marathi": "‡§ï‡•ç‡§∞‡•â‡§∏‡§¨‡•ç‡§∞‡•Ä‡§° ‡§ó‡§æ‡§Ø‡§æ‡§Ç‡§ö‡•Ä ‡§∏‡§Ç‡§ñ‡•ç‡§Ø‡§æ"}, "type": "number"},
    {"label": {"English": "Type of cross breed(HF/Jersey)", "Hindi": "‡§ï‡•ç‡§∞‡•â‡§∏‡§¨‡•ç‡§∞‡•Ä‡§° ‡§™‡•ç‡§∞‡§ï‡§æ‡§∞ (HF/‡§ú‡§∞‡•ç‡§∏‡•Ä)", "Marathi": "‡§ï‡•ç‡§∞‡•â‡§∏‡§¨‡•ç‡§∞‡•Ä‡§° ‡§™‡•ç‡§∞‡§ï‡§æ‡§∞ (HF/‡§ú‡§∞‡•ç‡§∏‡•Ä)"}, "type": "text"},
    {"label": {"English": "Milk Production in litres per day-Cross breed(HF/Jersey)-2", "Hindi": "‡§ï‡•ç‡§∞‡•â‡§∏‡§¨‡•ç‡§∞‡•Ä‡§° ‡§ó‡§æ‡§Ø‡•ã‡§Ç ‡§¶‡•ç‡§µ‡§æ‡§∞‡§æ ‡§™‡•ç‡§∞‡§§‡§ø‡§¶‡§ø‡§® ‡§¶‡•Ç‡§ß ‡§â‡§§‡•ç‡§™‡§æ‡§¶‡§® (HF/‡§ú‡§∞‡•ç‡§∏‡•Ä)", "Marathi": "‡§ï‡•ç‡§∞‡•â‡§∏‡§¨‡•ç‡§∞‡•Ä‡§° ‡§ó‡§æ‡§Ø‡•Ä‡§Ç‡§ï‡§°‡•Ç‡§® ‡§¶‡§∞‡§∞‡•ã‡§ú ‡§¶‡•Ç‡§ß ‡§â‡§§‡•ç‡§™‡§æ‡§¶‡§® (HF/‡§ú‡§∞‡•ç‡§∏‡•Ä)"}, "type": "number"},
    {"label": {"English": "No. of Buffalo", "Hindi": "‡§≠‡•à‡§Ç‡§∏‡•ã‡§Ç ‡§ï‡•Ä ‡§∏‡§Ç‡§ñ‡•ç‡§Ø‡§æ", "Marathi": "‡§Æ‡•ç‡§π‡§∂‡•Ä‡§Ç‡§ö‡•Ä ‡§∏‡§Ç‡§ñ‡•ç‡§Ø‡§æ"}, "type": "number"},
    {"label": {"English": "Milk Production in liters per day-buffalo", "Hindi": "‡§≠‡•à‡§Ç‡§∏‡•ã‡§Ç ‡§¶‡•ç‡§µ‡§æ‡§∞‡§æ ‡§™‡•ç‡§∞‡§§‡§ø‡§¶‡§ø‡§® ‡§¶‡•Ç‡§ß ‡§â‡§§‡•ç‡§™‡§æ‡§¶‡§® (‡§≤‡•Ä‡§ü‡§∞ ‡§Æ‡•á‡§Ç)", "Marathi": "‡§Æ‡•ç‡§π‡§∂‡•Ä‡§Ç‡§ï‡§°‡•Ç‡§® ‡§¶‡§∞‡§∞‡•ã‡§ú ‡§¶‡•Ç‡§ß ‡§â‡§§‡•ç‡§™‡§æ‡§¶‡§® (‡§≤‡§ø‡§ü‡§∞ ‡§Æ‡§ß‡•ç‡§Ø‡•á)"}, "type": "number"},

    # Remaining questions...
    {"label": {"English": "Preventive health care measures-Annual cycle", "Hindi": "‡§∞‡•ã‡§ï‡§•‡§æ‡§Æ ‡§∏‡•ç‡§µ‡§æ‡§∏‡•ç‡§•‡•ç‡§Ø ‡§¶‡•á‡§ñ‡§≠‡§æ‡§≤ ‡§â‡§™‡§æ‡§Ø - ‡§µ‡§æ‡§∞‡•ç‡§∑‡§ø‡§ï ‡§ö‡§ï‡•ç‡§∞", "Marathi": "‡§™‡•ç‡§∞‡§§‡§ø‡§¨‡§Ç‡§ß‡§æ‡§§‡•ç‡§Æ‡§ï ‡§Ü‡§∞‡•ã‡§ó‡•ç‡§Ø ‡§∏‡•á‡§µ‡§æ ‡§â‡§™‡§æ‡§Ø - ‡§µ‡§æ‡§∞‡•ç‡§∑‡§ø‡§ï ‡§ö‡§ï‡•ç‡§∞"}, "type": "text"},
    {"label": {"English": "Have they previously used Ethno veterinary resources", "Hindi": "‡§ï‡•ç‡§Ø‡§æ ‡§â‡§®‡•ç‡§π‡•ã‡§Ç‡§®‡•á ‡§™‡§π‡§≤‡•á ‡§è‡§•‡§®‡•ã ‡§™‡§∂‡•Å ‡§ö‡§ø‡§ï‡§ø‡§§‡•ç‡§∏‡§æ ‡§∏‡§Ç‡§∏‡§æ‡§ß‡§®‡•ã‡§Ç ‡§ï‡§æ ‡§â‡§™‡§Ø‡•ã‡§ó ‡§ï‡§ø‡§Ø‡§æ ‡§π‡•à", "Marathi": "‡§§‡•ç‡§Ø‡§æ‡§Ç‡§®‡•Ä ‡§™‡•Ç‡§∞‡•ç‡§µ‡•Ä ‡§™‡§æ‡§∞‡§Ç‡§™‡§∞‡§ø‡§ï ‡§™‡§∂‡•Å‡§µ‡•à‡§¶‡•ç‡§Ø‡§ï‡•Ä‡§Ø ‡§∏‡§æ‡§ß‡§®‡•á ‡§µ‡§æ‡§™‡§∞‡§≤‡•Ä ‡§Ü‡§π‡•á‡§§ ‡§ï‡§æ"}, "type": "select", "options": ["Yes", "No"]},
    {"label": {"English": "Women entrepreneur providing banking services", "Hindi": "‡§Æ‡§π‡§ø‡§≤‡§æ ‡§â‡§¶‡•ç‡§Ø‡§Æ‡•Ä ‡§ú‡•ã ‡§¨‡•à‡§Ç‡§ï‡§ø‡§Ç‡§ó ‡§∏‡•á‡§µ‡§æ‡§è‡§Ç ‡§™‡•ç‡§∞‡§¶‡§æ‡§® ‡§ï‡§∞‡§§‡•Ä ‡§π‡•à‡§Ç", "Marathi": "‡§¨‡§Å‡§ï‡§ø‡§Ç‡§ó ‡§∏‡•á‡§µ‡§æ ‡§™‡•Å‡§∞‡§µ‡§£‡§æ‡§±‡•ç‡§Ø‡§æ ‡§Æ‡§π‡§ø‡§≤‡§æ ‡§â‡§¶‡•ç‡§Ø‡•ã‡§ú‡§ø‡§ï‡§æ"}, "type": "select", "options": ["Yes", "No"]},
    {"label": {"English": "Extension services", "Hindi": "‡§µ‡§ø‡§∏‡•ç‡§§‡§æ‡§∞ ‡§∏‡•á‡§µ‡§æ‡§è‡§Ç", "Marathi": "‡§µ‡§ø‡§∏‡•ç‡§§‡§æ‡§∞ ‡§∏‡•á‡§µ‡§æ"}, "type": "text"}
]

# Collect answers
baseline_answers = {}

# Render form UI
st.header("üìã Baseline Survey Questions")
for idx, q in enumerate(BASELINE_QUESTIONS):
    label = q['label'].get(lang, q['label']['English'])
    key = f"baseline_q_{idx}"

if q['type'] == 'text':
    baseline_answers[label] = st.text_input(label, key=key)
elif q['type'] == 'number':
    baseline_answers[label] = st.number_input(label, min_value=0.0, key=key)
elif q['type'] == 'select':
    baseline_answers[label] = st.selectbox(label, q['options'], key=key)
elif q['type'] == 'multiselect':
    baseline_answers[label] = st.multiselect(label, q['options'], key=key)

# Display responses in summary (to integrate into app.py)
if 'data' in globals():
    data.update(baseline_answers)
    with st.expander("üîç Click to Review Baseline Responses"):
        st.subheader("üìã Baseline Questions")
        for k in baseline_answers:
            st.markdown(f"**{k}**: {data.get(k)}")

st.divider()
st.header("üîê Admin Real-Time Access")

# Allowed Emails
ALLOWED_EMAILS = ["shifalis@tns.org", "rmukherjee@tns.org","rsomanchi@tns.org", "mkaushal@tns.org"]
admin_email = st.text_input("Enter your Admin Email to unlock extra features:")

if admin_email in ALLOWED_EMAILS:
    st.success("‚úÖ Admin access granted! Real-time view enabled.")

if st.checkbox("üñºÔ∏è View and Download Uploaded Images"):
    image_files = [f for f in os.listdir(SAVE_DIR) if f.lower().endswith(('.jpg', '.jpeg', '.png'))]
    if image_files:
        for img_file in image_files:
            img_path = os.path.join(SAVE_DIR, img_file)
            st.image(img_path, caption=img_file, use_column_width=True)
            with open(img_path, "rb") as img:
                st.download_button(
                    label=f"‚¨áÔ∏è Download {img_file}",
                    data=img,
                    file_name=img_file,
                    mime="image/jpeg" if img_file.lower().endswith('.jpg') else "image/png"
                )
    else:
        st.warning("‚ö†Ô∏è No images found.")
else:
    if admin_email:
        st.error("‚ùå Not an authorized admin.")

if st.checkbox("üìÑ View Past Submissions"):
    files = [f for f in os.listdir(SAVE_DIR) if f.endswith('.csv')]
    if files:
        all_data = pd.concat([pd.read_csv(os.path.join(SAVE_DIR, f)) for f in files], ignore_index=True)
        st.dataframe(all_data)
        csv = all_data.to_csv(index=False).encode('utf-8')
        st.download_button(
            label="‚¨áÔ∏è Download All Responses",
            data=csv,
            file_name='all_survey_responses.csv',
            mime='text/csv',
            key='public_csv_download'
        )
    else:
        st.warning("‚ö†Ô∏è No submissions found yet.")
